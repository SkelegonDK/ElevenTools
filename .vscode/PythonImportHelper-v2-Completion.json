[
    {
        "label": "streamlit",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "streamlit",
        "description": "streamlit",
        "detail": "streamlit",
        "documentation": {}
    },
    {
        "label": "detect_string_variables",
        "importPath": "functions",
        "description": "functions",
        "isExtraImport": true,
        "detail": "functions",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "ELEVENLABS_API_KEY",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "ELEVENLABS_API_KEY = st.secrets[\"ELEVENLABS_API_KEY\"]\nOPENAI_API = st.secrets[\"OPENAI_API_KEY\"]\nif \"voice_id\" not in st.session_state:\n    st.session_state[\"voice_id\"] = []\nst.title(\"Eleven Tools\")\nst.subheader(\"A better interface for Elevenlabs\")\nst.selectbox(\"Select voice\", st.session_state[\"voice_id\"])\nselect_model = st.selectbox(\n    \"Select model\", [\"Multilingual v1\", \"Multilingual v2\", \"Turbo v2\"]\n)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "OPENAI_API",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "OPENAI_API = st.secrets[\"OPENAI_API_KEY\"]\nif \"voice_id\" not in st.session_state:\n    st.session_state[\"voice_id\"] = []\nst.title(\"Eleven Tools\")\nst.subheader(\"A better interface for Elevenlabs\")\nst.selectbox(\"Select voice\", st.session_state[\"voice_id\"])\nselect_model = st.selectbox(\n    \"Select model\", [\"Multilingual v1\", \"Multilingual v2\", \"Turbo v2\"]\n)\nscript = st.text_area(\"Text to speech\", height=100)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "select_model",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "select_model = st.selectbox(\n    \"Select model\", [\"Multilingual v1\", \"Multilingual v2\", \"Turbo v2\"]\n)\nscript = st.text_area(\"Text to speech\", height=100)\nif script:\n    detected_variables = detect_string_variables(script)\n    if detected_variables is not None:\n        st.info(\"Detected variables\")\n        variables_exp = st.expander(\"Text variables\", expanded=True)\n        with variables_exp:",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "script",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "script = st.text_area(\"Text to speech\", height=100)\nif script:\n    detected_variables = detect_string_variables(script)\n    if detected_variables is not None:\n        st.info(\"Detected variables\")\n        variables_exp = st.expander(\"Text variables\", expanded=True)\n        with variables_exp:\n            for variable in detected_variables:\n                value = st.text_input(f\"Edit: {variable}\", key=variable)\n                if value:",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "voice_settings",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "voice_settings = st.expander(\"Advanced voice settings\", expanded=True)\nwith voice_settings:\n    voice_similarity = st.slider(\"Voice similarity\", 0.0, 1.0, 0.5)\n    voice_stability = st.slider(\"Voice stability\", 0.0, 1.0, 0.5)\n    voice_style = st.slider(\"Voice style\", 0.0, 1.0, 0.0)\ngenerate_audio = st.button(\"Generate\")\n####### Sidebar #######\nsidebar = st.sidebar\nwith sidebar:\n    add_voice_ID = sidebar.text_input(\"Add voice ID\")",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "generate_audio",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "generate_audio = st.button(\"Generate\")\n####### Sidebar #######\nsidebar = st.sidebar\nwith sidebar:\n    add_voice_ID = sidebar.text_input(\"Add voice ID\")\n    add_voice_btn = sidebar.button(\"Add voice\")\n    settings = sidebar.expander(\"Settings\", expanded=True)\n    if add_voice_btn:\n        st.session_state[\"voice_id\"].append(add_voice_ID)\n        st.write(st.session_state[\"voice_id\"])",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "sidebar",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "sidebar = st.sidebar\nwith sidebar:\n    add_voice_ID = sidebar.text_input(\"Add voice ID\")\n    add_voice_btn = sidebar.button(\"Add voice\")\n    settings = sidebar.expander(\"Settings\", expanded=True)\n    if add_voice_btn:\n        st.session_state[\"voice_id\"].append(add_voice_ID)\n        st.write(st.session_state[\"voice_id\"])\n        st.toast(\"Press R the update the list\", icon=\"♻️\")\n    if st.secrets[\"ELEVENLABS_API_KEY\"] is None or \"YOUR_API\":",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "detect_string_variables",
        "kind": 2,
        "importPath": "functions",
        "description": "functions",
        "peekOfCode": "def detect_string_variables(text: str):\n    \"\"\"\n    Detects string variables in a given text\n    \"\"\"\n    return re.findall(r\"\\{([^}]+)\\}\", text)",
        "detail": "functions",
        "documentation": {}
    }
]